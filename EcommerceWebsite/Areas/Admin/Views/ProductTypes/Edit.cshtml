@model EcommerceWebsite.Models.ProductTypes;
@{
    ViewData["Title"] = "Edit";
}
<br />

<h2 class="text-info">Edit Product Type</h2>
<form asp-action="Edit" method="post">
    <div class="p-4 rounded border">
        <input type="hidden" asp-for="Id"/>
        <div asp-validation-summary="ModelOnly" class="text-danger">

        </div>
        <div class="form-group row">
            <div class="col-2">
                <label asp-for="ProductType"></label>
            </div>
            <div class="col-5">
                <input asp-for="ProductType" class="form-control">
            </div>
            <span asp-validation-for="ProductType" class="text-danger"></span>
        </div>
        <div class="form-group">
            <input type="submit" class="btn btn-primary edit" value="Update" />
            <a asp-action="Index" class="btn btn-success">Back to List</a>
        </div>
    </div>
</form>

<div style="display:none" id="dialog-confirm" title="Edit Product Type">
    <p><span style="float:left;"></span><i class="fa-solid fa-triangle-exclamation"></i> Are you sure you want to edit Product Type?</p>
</div>

@section Scripts{
    @{await Html.RenderPartialAsync(partialViewName: "_ValidationScriptsPartial");}

<script language="javascript" type="text/javascript">

    var currentForm;
    $(function () {
        $("#dialog-confirm").dialog({
            resizable: false,
            modal: true,
            autoOpen: false,
            buttons: {
                'Update': function () {
                    $(this).dialog('close');
                    currentForm.submit();
                },
                'Cancel': function () {
                    $(this).dialog('close');
                }
            }
        });
        $(".edit").click(function () {
            currentForm = $(this).closest('form');
            $("#dialog-confirm").dialog('open');
            return false;
        });
    });

</script>
}